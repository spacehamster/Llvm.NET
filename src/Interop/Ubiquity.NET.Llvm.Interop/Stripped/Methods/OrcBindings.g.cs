// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0-alpha.3.0.ci-ZZZ.503841922
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable disable

using System.CodeDom.Compiler;
using System.Runtime.InteropServices;
using System.Security;

namespace Ubiquity.NET.Llvm.Interop
{
    /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Delegate[@name="LLVMOrcSymbolResolverFn"]/*' />
    [UnmanagedFunctionPointer( global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
    public delegate global::System.UInt64 LLVMOrcSymbolResolverFn([MarshalAs( UnmanagedType.LPStr )] string Name, global::System.IntPtr LookupCtx);

    /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Delegate[@name="LLVMOrcLazyCompileCallbackFn"]/*' />
    [UnmanagedFunctionPointer( global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
    public delegate global::System.UInt64 LLVMOrcLazyCompileCallbackFn(LLVMOrcJITStackRef JITStack, global::System.IntPtr CallbackCtx);

    public static partial class NativeMethods
    {
        /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Function[@name="LLVMOrcCreateInstance"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMOrcJITStackRef LLVMOrcCreateInstance(LLVMTargetMachineRef TM);

        /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Function[@name="LLVMOrcGetErrorMsg"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        [return: MarshalAs( UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof( AliasStringMarshaler ) )]
        public static extern string LLVMOrcGetErrorMsg(LLVMOrcJITStackRef JITStack);

        /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Function[@name="LLVMOrcGetMangledSymbol"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMOrcGetMangledSymbol(LLVMOrcJITStackRef JITStack, [MarshalAs( UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof( OrcDisposeMangledSymbolMarshaler ) )] out string MangledSymbol, [MarshalAs( UnmanagedType.LPStr )] string Symbol);

        /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Function[@name="LLVMOrcCreateLazyCompileCallback"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcCreateLazyCompileCallback(LLVMOrcJITStackRef JITStack, out global::System.UInt64 RetAddr, LLVMOrcLazyCompileCallbackFn Callback, global::System.IntPtr CallbackCtx);

        /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Function[@name="LLVMOrcCreateIndirectStub"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcCreateIndirectStub(LLVMOrcJITStackRef JITStack, [MarshalAs( UnmanagedType.LPStr )] string StubName, global::System.UInt64 InitAddr);

        /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Function[@name="LLVMOrcSetIndirectStubPointer"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcSetIndirectStubPointer(LLVMOrcJITStackRef JITStack, [MarshalAs( UnmanagedType.LPStr )] string StubName, global::System.UInt64 NewAddr);

        /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Function[@name="LLVMOrcAddEagerlyCompiledIR"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcAddEagerlyCompiledIR(LLVMOrcJITStackRef JITStack, out global::System.UInt64 RetHandle, LLVMModuleRef Mod, LLVMOrcSymbolResolverFn SymbolResolver, global::System.IntPtr SymbolResolverCtx);

        /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Function[@name="LLVMOrcAddLazilyCompiledIR"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcAddLazilyCompiledIR(LLVMOrcJITStackRef JITStack, out global::System.UInt64 RetHandle, LLVMModuleRef Mod, LLVMOrcSymbolResolverFn SymbolResolver, global::System.IntPtr SymbolResolverCtx);

        /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Function[@name="LLVMOrcAddObjectFile"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcAddObjectFile(LLVMOrcJITStackRef JITStack, out global::System.UInt64 RetHandle, LLVMMemoryBufferRef Obj, LLVMOrcSymbolResolverFn SymbolResolver, global::System.IntPtr SymbolResolverCtx);

        /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Function[@name="LLVMOrcRemoveModule"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcRemoveModule(LLVMOrcJITStackRef JITStack, global::System.UInt64 H);

        /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Function[@name="LLVMOrcGetSymbolAddress"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcGetSymbolAddress(LLVMOrcJITStackRef JITStack, out global::System.UInt64 RetAddr, [MarshalAs( UnmanagedType.LPStr )] string SymbolName);

        /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Function[@name="LLVMOrcGetSymbolAddressIn"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcGetSymbolAddressIn(LLVMOrcJITStackRef JITStack, out global::System.UInt64 RetAddr, global::System.UInt64 H, [MarshalAs( UnmanagedType.LPStr )] string SymbolName);

        /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Function[@name="LLVMOrcRegisterJITEventListener"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMOrcRegisterJITEventListener(LLVMOrcJITStackRef JITStack, LLVMJITEventListenerRef L);

        /// <include file="../../ApiDocs/llvm-c/OrcBindings.xml" path='LibLlvmAPI/Function[@name="LLVMOrcUnregisterJITEventListener"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMOrcUnregisterJITEventListener(LLVMOrcJITStackRef JITStack, LLVMJITEventListenerRef L);

    }
}
